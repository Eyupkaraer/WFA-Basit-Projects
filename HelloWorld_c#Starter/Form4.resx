<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IRr3z9KgomdtX3pp2ocU7ZFH/9k=
</value>
  </data>
</root>